{
	"info": {
		"_postman_id": "ab1e4d85-aed0-4199-973b-6ef5ef3a58ea",
		"name": "https://petstore.swagger.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "https://petstore.swagger.io/v2/pet",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"tests[\"successStatus = sold\"] = jsonData.status === \"available\";\r",
							"\r",
							"\r",
							"\r",
							"const schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"id\": 147,\r",
							"            \"category\": {\r",
							"                \"id\": 37,\r",
							"                \"name\": \"Wilma Mountain\"\r",
							"            },\r",
							"            \"name\": \"Myra\",\r",
							"            \"photoUrls\": [\r",
							"                \"http://placeimg.com/640/480\",\r",
							"                \"http://placeimg.com/640/480/11\",\r",
							"                \"http://placeimg.com/640/480/10\"\r",
							"            ],\r",
							"            \"tags\": [\r",
							"                {\r",
							"                    \"id\": 1,\r",
							"                    \"name\": \"Abbigail\"\r",
							"                },\r",
							"                {\r",
							"                    \"id\": 2,\r",
							"                    \"name\": \"Justice\"\r",
							"                }\r",
							"            ],\r",
							"            \"status\": \"available\"\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"id\",\r",
							"        \"category\",\r",
							"        \"name\",\r",
							"        \"photoUrls\",\r",
							"        \"tags\",\r",
							"        \"status\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"id\": {\r",
							"            \"$id\": \"#/properties/id\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The id schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                147\r",
							"            ]\r",
							"        },\r",
							"        \"category\": {\r",
							"            \"$id\": \"#/properties/category\",\r",
							"            \"type\": \"object\",\r",
							"            \"title\": \"The category schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": {},\r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"id\": 37,\r",
							"                    \"name\": \"Wilma Mountain\"\r",
							"                }\r",
							"            ],\r",
							"            \"required\": [\r",
							"                \"id\",\r",
							"                \"name\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"id\": {\r",
							"                    \"$id\": \"#/properties/category/properties/id\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The id schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        37\r",
							"                    ]\r",
							"                },\r",
							"                \"name\": {\r",
							"                    \"$id\": \"#/properties/category/properties/name\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The name schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"Wilma Mountain\"\r",
							"                    ]\r",
							"                }\r",
							"            },\r",
							"            \"additionalProperties\": true\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"$id\": \"#/properties/name\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The name schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"Myra\"\r",
							"            ]\r",
							"        },\r",
							"        \"photoUrls\": {\r",
							"            \"$id\": \"#/properties/photoUrls\",\r",
							"            \"type\": \"array\",\r",
							"            \"title\": \"The photoUrls schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": [],\r",
							"            \"examples\": [\r",
							"                [\r",
							"                    \"http://placeimg.com/640/480\",\r",
							"                    \"http://placeimg.com/640/480/11\"\r",
							"                ]\r",
							"            ],\r",
							"            \"additionalItems\": true,\r",
							"            \"items\": {\r",
							"                \"$id\": \"#/properties/photoUrls/items\",\r",
							"                \"anyOf\": [\r",
							"                    {\r",
							"                        \"$id\": \"#/properties/photoUrls/items/anyOf/0\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The first anyOf schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": \"\",\r",
							"                        \"examples\": [\r",
							"                            \"http://placeimg.com/640/480\",\r",
							"                            \"http://placeimg.com/640/480/11\"\r",
							"                        ]\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        },\r",
							"        \"tags\": {\r",
							"            \"$id\": \"#/properties/tags\",\r",
							"            \"type\": \"array\",\r",
							"            \"title\": \"The tags schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": [],\r",
							"            \"examples\": [\r",
							"                [\r",
							"                    {\r",
							"                        \"id\": 1,\r",
							"                        \"name\": \"Abbigail\"\r",
							"                    },\r",
							"                    {\r",
							"                        \"id\": 2,\r",
							"                        \"name\": \"Justice\"\r",
							"                    }\r",
							"                ]\r",
							"            ],\r",
							"            \"additionalItems\": true,\r",
							"            \"items\": {\r",
							"                \"$id\": \"#/properties/tags/items\",\r",
							"                \"anyOf\": [\r",
							"                    {\r",
							"                        \"$id\": \"#/properties/tags/items/anyOf/0\",\r",
							"                        \"type\": \"object\",\r",
							"                        \"title\": \"The first anyOf schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": {},\r",
							"                        \"examples\": [\r",
							"                            {\r",
							"                                \"id\": 1,\r",
							"                                \"name\": \"Abbigail\"\r",
							"                            }\r",
							"                        ],\r",
							"                        \"required\": [\r",
							"                            \"id\",\r",
							"                            \"name\"\r",
							"                        ],\r",
							"                        \"properties\": {\r",
							"                            \"id\": {\r",
							"                                \"$id\": \"#/properties/tags/items/anyOf/0/properties/id\",\r",
							"                                \"type\": \"integer\",\r",
							"                                \"title\": \"The id schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": 0,\r",
							"                                \"examples\": [\r",
							"                                    1\r",
							"                                ]\r",
							"                            },\r",
							"                            \"name\": {\r",
							"                                \"$id\": \"#/properties/tags/items/anyOf/0/properties/name\",\r",
							"                                \"type\": \"string\",\r",
							"                                \"title\": \"The name schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": \"\",\r",
							"                                \"examples\": [\r",
							"                                    \"Abbigail\"\r",
							"                                ]\r",
							"                            }\r",
							"                        },\r",
							"                        \"additionalProperties\": true\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"$id\": \"#/properties/status\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The status schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"available\"\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": false\r",
							"}\r",
							"\r",
							"\r",
							"pm.test(\"Validate schema\", () => {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"//pm.test(\"Validate schema\", function() {\r",
							"      //pm.expect(tv4.validate(jsonData, schema)).to.be.true;  // валидируем по схеме и по ответу запроса \r",
							"//});\r",
							"\r",
							"//https://petstore.swagger.io/v2/swagger.json#/definitions/pet\r",
							"\r",
							"postman.setEnvironmentVariable (\"petId\", jsonData.id);\r",
							"\r",
							"postman.setEnvironmentVariable (\"postName\", jsonData.name);\r",
							"\r",
							"postman.setEnvironmentVariable (\"postStatus\", pm.response.json().status);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": {{$randomInt}},\r\n    \"category\": {\r\n        \"id\": {{$randomInt}},\r\n        \"name\": \"{{$randomStreetName}}\"\r\n    },\r\n    \"name\": \"{{$randomFirstName}}\",\r\n    \"photoUrls\": [\r\n        \"{{$randomImageUrl}}\", \"{{$randomImageUrl}}/11\",\"{{$randomImageUrl}}/10\"\r\n    ],\r\n    \"tags\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"{{$randomFirstName}}\"\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"{{$randomFirstName}}\"\r\n    }\r\n  ],\r\n    \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var stsold = \"sold\";\r",
							"\r",
							"postman.setEnvironmentVariable (\"statusSold\", stsold);\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"tests[\"successStatus = sold\"] = jsonData.status === \"sold\";\r",
							"\r",
							"\r",
							"pm.test(\"Id check\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"petId\")));\r",
							"});\r",
							"\r",
							"\r",
							"postman.setEnvironmentVariable (\"postStatus\", pm.response.json().status);\r",
							"\r",
							"postman.setEnvironmentVariable (\"putName\", pm.response.json().name);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": {{petId}},\r\n    \"category\": {\r\n        \"id\": {{$randomInt}},\r\n        \"name\": \"{{$randomCompanyName}}\"\r\n    },\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"photoUrls\": [\r\n        \"http://placeimg.com/640/480\",\r\n        \"http://placeimg.com/640/480/11\",\r\n        \"http://placeimg.com/640/480/10\"\r\n    ],\r\n    \"tags\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Alexane\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"name\": \"Cecile\"\r\n        }\r\n    ],\r\n    \"status\": \"{{statusSold}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet/493",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Id check\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"petId\")));\r",
							"});\r",
							"\r",
							"//pm.test(\"Status check\", function () {\r",
							" //   pm.expect(jsonData.status).to.not.eql(pm.environment.get(\"postStatus\"));\r",
							"//});\r",
							"\r",
							"//pm.test (\"Chekc Post name VS Put name\", function () {\r",
							"  //  pm.expect(jsonData.name).to.eql(pm.environment.get(\"postName\"));\r",
							"//});\r",
							"\r",
							"\r",
							"postman.setEnvironmentVariable (\"statusSold\", null);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/{{petId}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"{{petId}}"
					],
					"query": [
						{
							"key": "id",
							"value": "493",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet/findByStatus?status=sold",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"check pet entity\", function () {\r",
							"   var jsonData = JSON.parse(responseBody);\r",
							"    var size = jsonData.length;\r",
							"     var arrayid = pm.environment.get(\"petId\");\r",
							"     var petname = pm.environment.get(\"putName\");\r",
							"     var stat = pm.environment.get(\"postStatus\");\r",
							"//var flag = true;\r",
							"for(var i = 0; i < size; i++) {\r",
							"     if(jsonData[i].id == arrayid && jsonData[i].status == stat) {\r",
							"       pm.expect(jsonData[i].name).to.eql(petname)\r",
							"    }\r",
							"    else if (jsonData[i].id !== arrayid && jsonData[i].status !== stat) {\r",
							"        pm.expect.fail(\"Wrong parameters!\")\r",
							"    }\r",
							"}\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/findByStatus?status=sold",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"findByStatus"
					],
					"query": [
						{
							"key": "status",
							"value": "sold"
						},
						{
							"key": "status",
							"value": "pending",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}